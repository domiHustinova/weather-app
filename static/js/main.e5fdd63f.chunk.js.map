{"version":3,"sources":["components/Weather/weather-icons.js","components/Weather/index.js","components/Menu/index.js","App.js","serviceWorker.js","index.js"],"names":["getWeatherIcon","code","img","partOfDay","icon","weatherIcons","slice","Weather","weatherData","className","id","name","Math","round","temp","description","speed","humidity","arrayDays","apiKey","apiUrl","CITIES","Menu","props","onClickHandler","city","setState","currentCity","fetchWeather","fetchForecast","getDate","time","date","Date","weekDay","getDay","day","month","getMonth","state","displayWeather","forecastData","bind","fetch","then","response","json","data","main","weather","wind","dataReceived","list","map","forecastDays","dt","getForecastData","groups","reduce","forecast","push","temps","Object","keys","prev","current","this","key","onClick","Array","isArray","length","React","Component","App","Boolean","window","location","hostname","match","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e5fdd63f.chunk.js","sourcesContent":["// Based on Gist by Tim Branyent:\n// https://gist.github.com/tbranyen/62d974681dea8ee0caa1\n\nexport default function getWeatherIcon(code, img) {\n  let prefix = 'wi wi-';\n  let partOfDay = '';\n  let icon = weatherIcons[code].icon;\n\n  if (img.slice(-1) === 'd') {\n    partOfDay = 'day-';\n  } else if (img.slice(-1) === 'n') {\n    partOfDay = 'night-';\n  }\n\n  // icons 7xx and 9xx do not get prefixed with day/night\n  if (!(code > 699 && code < 800) && !(code > 899 && code < 1000)) {\n    icon = partOfDay + icon;\n  }\n\n  // Put everything together and return it\n  return `${prefix + icon}`;\n}\n\n\n// mapping of City Icons (https://github.com/erikflowers/weather-icons)\n// to OpenWeatherMap weather codes\nconst weatherIcons = {\n  \"200\": {\n    \"label\": \"thunderstorm with light rain\",\n    \"icon\": \"storm-showers\"\n  },\n\n  \"201\": {\n    \"label\": \"thunderstorm with rain\",\n    \"icon\": \"storm-showers\"\n  },\n\n  \"202\": {\n    \"label\": \"thunderstorm with heavy rain\",\n    \"icon\": \"storm-showers\"\n  },\n\n  \"210\": {\n    \"label\": \"light thunderstorm\",\n    \"icon\": \"storm-showers\"\n  },\n\n  \"211\": {\n    \"label\": \"thunderstorm\",\n    \"icon\": \"thunderstorm\"\n  },\n\n  \"212\": {\n    \"label\": \"heavy thunderstorm\",\n    \"icon\": \"thunderstorm\"\n  },\n\n  \"221\": {\n    \"label\": \"ragged thunderstorm\",\n    \"icon\": \"thunderstorm\"\n  },\n\n  \"230\": {\n    \"label\": \"thunderstorm with light drizzle\",\n    \"icon\": \"storm-showers\"\n  },\n\n  \"231\": {\n    \"label\": \"thunderstorm with drizzle\",\n    \"icon\": \"storm-showers\"\n  },\n\n  \"232\": {\n    \"label\": \"thunderstorm with heavy drizzle\",\n    \"icon\": \"storm-showers\"\n  },\n\n  \"300\": {\n    \"label\": \"light intensity drizzle\",\n    \"icon\": \"sprinkle\"\n  },\n\n  \"301\": {\n    \"label\": \"drizzle\",\n    \"icon\": \"sprinkle\"\n  },\n\n  \"302\": {\n    \"label\": \"heavy intensity drizzle\",\n    \"icon\": \"sprinkle\"\n  },\n\n  \"310\": {\n    \"label\": \"light intensity drizzle rain\",\n    \"icon\": \"sprinkle\"\n  },\n\n  \"311\": {\n    \"label\": \"drizzle rain\",\n    \"icon\": \"sprinkle\"\n  },\n\n  \"312\": {\n    \"label\": \"heavy intensity drizzle rain\",\n    \"icon\": \"sprinkle\"\n  },\n\n  \"313\": {\n    \"label\": \"shower rain and drizzle\",\n    \"icon\": \"sprinkle\"\n  },\n\n  \"314\": {\n    \"label\": \"heavy shower rain and drizzle\",\n    \"icon\": \"sprinkle\"\n  },\n\n  \"321\": {\n    \"label\": \"shower drizzle\",\n    \"icon\": \"sprinkle\"\n  },\n\n  \"500\": {\n    \"label\": \"light rain\",\n    \"icon\": \"rain\"\n  },\n\n  \"501\": {\n    \"label\": \"moderate rain\",\n    \"icon\": \"rain\"\n  },\n\n  \"502\": {\n    \"label\": \"heavy intensity rain\",\n    \"icon\": \"rain\"\n  },\n\n  \"503\": {\n    \"label\": \"very heavy rain\",\n    \"icon\": \"rain\"\n  },\n\n  \"504\": {\n    \"label\": \"extreme rain\",\n    \"icon\": \"rain\"\n  },\n\n  \"511\": {\n    \"label\": \"freezing rain\",\n    \"icon\": \"rain-mix\"\n  },\n\n  \"520\": {\n    \"label\": \"light intensity shower rain\",\n    \"icon\": \"showers\"\n  },\n\n  \"521\": {\n    \"label\": \"shower rain\",\n    \"icon\": \"showers\"\n  },\n\n  \"522\": {\n    \"label\": \"heavy intensity shower rain\",\n    \"icon\": \"showers\"\n  },\n\n  \"531\": {\n    \"label\": \"ragged shower rain\",\n    \"icon\": \"showers\"\n  },\n\n  \"600\": {\n    \"label\": \"light snow\",\n    \"icon\": \"snow\"\n  },\n\n  \"601\": {\n    \"label\": \"snow\",\n    \"icon\": \"snow\"\n  },\n\n  \"602\": {\n    \"label\": \"heavy snow\",\n    \"icon\": \"snow\"\n  },\n\n  \"611\": {\n    \"label\": \"sleet\",\n    \"icon\": \"sleet\"\n  },\n\n  \"612\": {\n    \"label\": \"shower sleet\",\n    \"icon\": \"sleet\"\n  },\n\n  \"615\": {\n    \"label\": \"light rain and snow\",\n    \"icon\": \"rain-mix\"\n  },\n\n  \"616\": {\n    \"label\": \"rain and snow\",\n    \"icon\": \"rain-mix\"\n  },\n\n  \"620\": {\n    \"label\": \"light shower snow\",\n    \"icon\": \"rain-mix\"\n  },\n\n  \"621\": {\n    \"label\": \"shower snow\",\n    \"icon\": \"rain-mix\"\n  },\n\n  \"622\": {\n    \"label\": \"heavy shower snow\",\n    \"icon\": \"rain-mix\"\n  },\n\n  \"701\": {\n    \"label\": \"mist\",\n    \"icon\": \"sprinkle\"\n  },\n\n  \"711\": {\n    \"label\": \"smoke\",\n    \"icon\": \"smoke\"\n  },\n\n  \"721\": {\n    \"label\": \"haze\",\n    \"icon\": \"day-haze\"\n  },\n\n  \"731\": {\n    \"label\": \"sand, dust whirls\",\n    \"icon\": \"cloudy-gusts\"\n  },\n\n  \"741\": {\n    \"label\": \"fog\",\n    \"icon\": \"fog\"\n  },\n\n  \"751\": {\n    \"label\": \"sand\",\n    \"icon\": \"cloudy-gusts\"\n  },\n\n  \"761\": {\n    \"label\": \"dust\",\n    \"icon\": \"dust\"\n  },\n\n  \"762\": {\n    \"label\": \"volcanic ash\",\n    \"icon\": \"smog\"\n  },\n\n  \"771\": {\n    \"label\": \"squalls\",\n    \"icon\": \"day-windy\"\n  },\n\n  \"781\": {\n    \"label\": \"tornado\",\n    \"icon\": \"tornado\"\n  },\n\n  \"800\": {\n    \"label\": \"clear sky\",\n    \"icon\": \"sunny\"\n  },\n\n  \"801\": {\n    \"label\": \"few clouds\",\n    \"icon\": \"cloudy\"\n  },\n\n  \"802\": {\n    \"label\": \"scattered clouds\",\n    \"icon\": \"cloudy\"\n  },\n\n  \"803\": {\n    \"label\": \"broken clouds\",\n    \"icon\": \"cloudy\"\n  },\n\n  \"804\": {\n    \"label\": \"overcast clouds\",\n    \"icon\": \"cloudy\"\n  },\n\n\n  \"900\": {\n    \"label\": \"tornado\",\n    \"icon\": \"tornado\"\n  },\n\n  \"901\": {\n    \"label\": \"tropical storm\",\n    \"icon\": \"hurricane\"\n  },\n\n  \"902\": {\n    \"label\": \"hurricane\",\n    \"icon\": \"hurricane\"\n  },\n\n  \"903\": {\n    \"label\": \"cold\",\n    \"icon\": \"snowflake-cold\"\n  },\n\n  \"904\": {\n    \"label\": \"hot\",\n    \"icon\": \"hot\"\n  },\n\n  \"905\": {\n    \"label\": \"windy\",\n    \"icon\": \"windy\"\n  },\n\n  \"906\": {\n    \"label\": \"hail\",\n    \"icon\": \"hail\"\n  },\n\n  \"951\": {\n    \"label\": \"calm\",\n    \"icon\": \"sunny\"\n  },\n\n  \"952\": {\n    \"label\": \"light breeze\",\n    \"icon\": \"cloudy-gusts\"\n  },\n\n  \"953\": {\n    \"label\": \"gentle breeze\",\n    \"icon\": \"cloudy-gusts\"\n  },\n\n  \"954\": {\n    \"label\": \"moderate breeze\",\n    \"icon\": \"cloudy-gusts\"\n  },\n\n  \"955\": {\n    \"label\": \"fresh breeze\",\n    \"icon\": \"cloudy-gusts\"\n  },\n\n  \"956\": {\n    \"label\": \"strong breeze\",\n    \"icon\": \"cloudy-gusts\"\n  },\n\n  \"957\": {\n    \"label\": \"high wind, near gale\",\n    \"icon\": \"cloudy-gusts\"\n  },\n\n  \"958\": {\n    \"label\": \"gale\",\n    \"icon\": \"cloudy-gusts\"\n  },\n\n  \"959\": {\n    \"label\": \"severe gale\",\n    \"icon\": \"cloudy-gusts\"\n  },\n\n  \"960\": {\n    \"label\": \"storm\",\n    \"icon\": \"thunderstorm\"\n  },\n\n  \"961\": {\n    \"label\": \"violent storm\",\n    \"icon\": \"thunderstorm\"\n  },\n\n  \"962\": {\n    \"label\": \"hurricane\",\n    \"icon\": \"cloudy-gusts\"\n  }\n};","import React from \"react\";\nimport \"./index.scss\";\nimport getWeatherIcon from './weather-icons';\nimport \"./css/weather-icons.min.css\"\n\nexport const Weather = ({weatherData}) => {\n\n    return (\n        <div className=\"weather__current\">\n            <h2 className=\"weather__city\" id=\"mesto\">\n                {weatherData.name}\n            </h2>\n\n            <div className=\"weather__inner weather__inner--center\">\n                <div className=\"weather__section weather__section--temp\">\n                    <span className=\"weather__temp-value\" id=\"teplota\">{Math.round(weatherData.temp)}</span>\n                    <span className=\"weather__temp-unit\">°C</span>\n                    <div className=\"weather__description\" id=\"popis\">{weatherData.description}</div>\n                </div>\n                <div className=\"weather__section weather__section--icon\" id=\"ikona\">\n                    <i className={getWeatherIcon(weatherData.id, weatherData.icon)}></i>\n                </div>\n            </div>\n\n            <div className=\"weather__inner\">\n                <div className=\"weather__section\">\n                    <h3 className=\"weather__title\">Vítr</h3>\n                    <div className=\"weather__value\">\n                        <span id=\"vitr\">{weatherData.speed}</span> km/h\n                    </div>\n                </div>\n                <div className=\"weather__section\">\n                    <h3 className=\"weather__title\">Vlhkost</h3>\n                    <div className=\"weather__value\">\n                        <span id=\"vlhkost\">{weatherData.humidity}</span> %\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport \"./index.scss\";\nimport {Weather} from \"../Weather\";\nimport getWeatherIcon from '../Weather/weather-icons';\n\nconst arrayDays = ['Neděle', 'Pondelí', 'Úterý', 'Středa', 'Čtvrtek', 'Pátek', 'Sobota'];\nconst apiKey = 'b873b3cd2a6fe46f2345df4722c65732';\nconst apiUrl = 'https://api.openweathermap.org/data/2.5/';\nconst CITIES = [{name: \"Brno\", code: \"cz\"}, {name: \"Prague\", code: \"cz\"}, {name: \"Barcelona\", code: \"es\"}, {name: \"Bratislava\", code: \"sk\"}]\n\nexport class Menu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentCity: {},\n            weatherData: {},\n            displayWeather: false,\n            forecastData: [],\n        }\n\n        this.onClickHandler = this.onClickHandler.bind(this);\n    }\n\n    onClickHandler = (city) => {\n        this.setState({currentCity: city});\n        this.fetchWeather(city);\n        this.fetchForecast(city);\n    }\n\n    fetchWeather(city) {\n        let query = fetch(`${apiUrl}weather?APPID=${apiKey}&q=${city.name},${city.code}&units=metric&lang=CZ`)\n\n        query\n            .then(response => response.json())\n            .then(data => this.setState({\n                weatherData: {\n                    name: data.name,\n                    temp: data.main.temp,\n                    description: data.weather[0].description,\n                    id: data.weather[0].id,\n                    icon: data.weather[0].icon,\n                    humidity: data.main.humidity,\n                    speed: data.wind.speed,\n                }\n            }))\n    }\n\n    fetchForecast(city) {\n        let query = fetch(`${apiUrl}forecast?APPID=${apiKey}&q=${city.name},${city.code}&units=metric&lang=CZ`);\n        query\n            .then(response => response.json())\n            .then(dataReceived => {\n                const forecastData = dataReceived.list.map(forecastDays => {\n                    return {\n                        temp: Math.round(forecastDays.main.temp),\n                        date: this.getDate(forecastDays.dt),\n                        icon: getWeatherIcon(forecastDays.weather[0].id, forecastDays.weather[0].icon)\n                    }\n                });\n                this.getForecastData(forecastData);\n            })\n    }\n\n    getDate = (time) => {\n        let date = new Date(time * 1000);\n\n        return {\n            weekDay: date.getDay(),\n            day: date.getDate(),\n            month: date.getMonth() + 1\n        }\n    }\n\n    getForecastData(data) {\n\n        const groups = data.reduce((groups, forecast) => {\n            const date = forecast.date.day;\n            if (!groups[date]) {\n                groups[date] = [];\n            }\n            groups[date].push(forecast);\n\n            return groups;\n        }, {});\n\n        const temps = Object.keys(groups).map((day) => {\n\n            return groups[day].reduce(function (prev, current) {\n                return (current.temp > prev.temp) ? current : prev\n            })\n        });\n\n        this.setState({forecastData: temps.slice(1, -1)})\n    }\n\n    render() {\n        const {weatherData, forecastData} = this.state;\n        return (\n            <div>\n                <div className=\"button-group\">\n                    {CITIES.map(city => (\n                        <button className=\"button city\" key={city.name}\n                                onClick={() => this.onClickHandler(city)}>{city.name}</button>))}\n                </div>\n                {weatherData?.temp && (\n                    <div className=\"weather\">\n                        <Weather weatherData={weatherData}/>\n                        {Array.isArray(forecastData) && forecastData.length && (forecastData.map(day => (\n                            <div className=\"weather__forecast\">\n                                <div className=\"forecast\">\n                                    <div\n                                        className=\"forecast__day\">{arrayDays[day.date.weekDay]} {day.date.day}.{day.date.month}.\n                                    </div>\n                                    <div className=\"forecast__icon\"><i className={day.icon}></i></div>\n                                    <div className=\"forecast__temp\">{Math.round(day.temp)} °C</div>\n                                </div>\n                            </div>\n                        )))}\n                    </div>\n                )}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport {Menu} from \"./components/Menu\";\nfunction App() {\n    return (\n        <div>\n            <h1>Počasí</h1>\n            <Menu/>\n        </div>\n    )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}