{"version":3,"sources":["assets/background.jpg","i18n.js","services/consts.js","services/helpers.js","services/API.js","components/QuickOptions/QuickOptions.js","components/Weather/Weather.js","components/Forecast/Forecast.js","theme/consts.js","theme/GlobalStyle.js","App.js","index.js"],"names":["resources","en","translation","sk","i18n","use","initReactI18next","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","API_URL","API_KEY","WEEK_DAYS","CITIES","title","value","code","getDate","time","date","Date","weekDay","getDay","day","month","getMonth","getTime","timeUnix","hours","getHours","slice","minutes","getMinutes","getForecastData","data","groups","reduce","forecast","push","Object","keys","map","prev","current","temp","getWeatherIcon","img","partOfDay","icon","weatherIcons","label","fetchWeatherData","city","a","endpoint","fetch","json","name","Math","round","main","description","weather","id","humidity","speed","Number","parseFloat","wind","toFixed","sunrise","sys","sunset","fetchForecastData","list","forecastDays","dt","QuickOptionsWrapper","styled","div","theme","quickOptionsBorder","quickOptionsShadow","QuickOptionsButton","button","buttonBackground","buttonBackgroundGradientLight","buttonText","buttonBackgroundGradientDark","buttonBorder","QuickOptions","displayWeather","handleThemeChange","isDarkTheme","t","useTranslation","className","onClick","StyledWeatherWrapper","backgroundWeather","backgroundWeatherGradient","textWeather","StyledWeatherCityTitle","h2","StyledWeatherInnerTopWrapper","StyledWeatherInnerWrapper","StyledWeatherSection","StyledWeatherIconSection","StyledWeatherSectionTitle","h3","StyledWeatherSectionValue","StyledWeatherSectionTempValue","span","StyledWeatherSectionTempUnit","StyledWeatherSectionTempDescription","Weather","weatherData","ForecastWrapper","backgroundForecast","ForecastDayWrapper","borderForecast","textForecast","backgroundForecastHover","ForecastDate","ForecastIcon","iconForecast","ForecastTemp","Forecast","forecastData","dayData","PINK","WHITE","SHADOW_LIGHT","SHADOW_DARK","COMMON_COLORS","weatherCardBorder","weatherCardShadow","text","lightTheme","darkTheme","GlobalStyle","createGlobalStyle","require","StyledDisplayCard","App","useState","setIsDarkTheme","loading","setLoading","showWeatherCard","setShowWeatherCard","setWeatherData","setForecastData","newWeatherData","newForecastData","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3e2087d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.d4ea0c5e.jpg\";","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport translationEN from \"./services/translations/en.json\";\nimport translationSK from \"./services/translations/sk.json\";\n\n// the translations\n// (tip move them in a JSON file and import them)\nconst resources = {\n  en: {\n    translation: translationEN,\n  },\n  sk: {\n    translation: translationSK,\n  },\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: \"en\",\n    fallbackLng: \"en\",\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","export const API_URL = \"https://api.openweathermap.org/data/2.5/\";\n\nexport const API_KEY = \"b873b3cd2a6fe46f2345df4722c65732\";\n\nexport const WEEK_DAYS = [\n  \"week_day.sunday\",\n  \"week_day.monday\",\n  \"week_day.tuesday\",\n  \"week_day.wednesday\",\n  \"week_day.thursday\",\n  \"week_day.friday\",\n  \"week_day.saturday\",\n];\n\nexport const CITIES = [\n  { title: \"quick_options.city.prague\", value: \"Prague\", code: \"cz\" },\n  { title: \"quick_options.city.barcelona\", value: \"Barcelona\", code: \"es\" },\n  { title: \"quick_options.city.paris\", value: \"Paris\", code: \"fr\" },\n];\n","export const getDate = (time) => {\n  let date = new Date(time * 1000);\n\n  return {\n    weekDay: date.getDay(),\n    day: date.getDate(),\n    month: date.getMonth() + 1,\n  };\n};\n\nexport const getTime = (timeUnix) => {\n  let time = new Date(timeUnix * 1000);\n\n  return {\n    hours: (\"0\" + time.getHours()).slice(-2),\n    minutes: (\"0\" + time.getMinutes()).slice(-2),\n  };\n};\n\nexport const getForecastData = (data) => {\n  const groups = data.reduce((groups, forecast) => {\n    const date = forecast.date.day;\n    if (!groups[date]) {\n      groups[date] = [];\n    }\n    groups[date].push(forecast);\n\n    return groups;\n  }, {});\n\n  const temps = Object.keys(groups).map((day) => {\n    return groups[day].reduce(function (prev, current) {\n      return current.temp > prev.temp ? current : prev;\n    });\n  });\n\n  return temps.slice(1, -1);\n};\n\n// Based on Gist by Tim Branyent:\n// https://gist.github.com/tbranyen/62d974681dea8ee0caa1\n\nexport const getWeatherIcon = (code, img) => {\n  let prefix = \"wi wi-\";\n  let partOfDay = \"\";\n  let icon = weatherIcons[code].icon;\n\n  if (img.slice(-1) === \"d\") {\n    partOfDay = \"day-\";\n  } else if (img.slice(-1) === \"n\") {\n    partOfDay = \"night-\";\n  }\n\n  // icons 7xx and 9xx do not get prefixed with day/night\n  if (!(code > 699 && code < 800) && !(code > 899 && code < 1000)) {\n    icon = partOfDay + icon;\n  }\n\n  // Put everything together and return it\n  return `${prefix + icon}`;\n};\n\n// mapping of City Icons (https://github.com/erikflowers/weather-icons)\n// to OpenWeatherMap weather codes\nconst weatherIcons = {\n  \"200\": {\n    label: \"thunderstorm with light rain\",\n    icon: \"storm-showers\",\n  },\n\n  \"201\": {\n    label: \"thunderstorm with rain\",\n    icon: \"storm-showers\",\n  },\n\n  \"202\": {\n    label: \"thunderstorm with heavy rain\",\n    icon: \"storm-showers\",\n  },\n\n  \"210\": {\n    label: \"light thunderstorm\",\n    icon: \"storm-showers\",\n  },\n\n  \"211\": {\n    label: \"thunderstorm\",\n    icon: \"thunderstorm\",\n  },\n\n  \"212\": {\n    label: \"heavy thunderstorm\",\n    icon: \"thunderstorm\",\n  },\n\n  \"221\": {\n    label: \"ragged thunderstorm\",\n    icon: \"thunderstorm\",\n  },\n\n  \"230\": {\n    label: \"thunderstorm with light drizzle\",\n    icon: \"storm-showers\",\n  },\n\n  \"231\": {\n    label: \"thunderstorm with drizzle\",\n    icon: \"storm-showers\",\n  },\n\n  \"232\": {\n    label: \"thunderstorm with heavy drizzle\",\n    icon: \"storm-showers\",\n  },\n\n  \"300\": {\n    label: \"light intensity drizzle\",\n    icon: \"sprinkle\",\n  },\n\n  \"301\": {\n    label: \"drizzle\",\n    icon: \"sprinkle\",\n  },\n\n  \"302\": {\n    label: \"heavy intensity drizzle\",\n    icon: \"sprinkle\",\n  },\n\n  \"310\": {\n    label: \"light intensity drizzle rain\",\n    icon: \"sprinkle\",\n  },\n\n  \"311\": {\n    label: \"drizzle rain\",\n    icon: \"sprinkle\",\n  },\n\n  \"312\": {\n    label: \"heavy intensity drizzle rain\",\n    icon: \"sprinkle\",\n  },\n\n  \"313\": {\n    label: \"shower rain and drizzle\",\n    icon: \"sprinkle\",\n  },\n\n  \"314\": {\n    label: \"heavy shower rain and drizzle\",\n    icon: \"sprinkle\",\n  },\n\n  \"321\": {\n    label: \"shower drizzle\",\n    icon: \"sprinkle\",\n  },\n\n  \"500\": {\n    label: \"light rain\",\n    icon: \"rain\",\n  },\n\n  \"501\": {\n    label: \"moderate rain\",\n    icon: \"rain\",\n  },\n\n  \"502\": {\n    label: \"heavy intensity rain\",\n    icon: \"rain\",\n  },\n\n  \"503\": {\n    label: \"very heavy rain\",\n    icon: \"rain\",\n  },\n\n  \"504\": {\n    label: \"extreme rain\",\n    icon: \"rain\",\n  },\n\n  \"511\": {\n    label: \"freezing rain\",\n    icon: \"rain-mix\",\n  },\n\n  \"520\": {\n    label: \"light intensity shower rain\",\n    icon: \"showers\",\n  },\n\n  \"521\": {\n    label: \"shower rain\",\n    icon: \"showers\",\n  },\n\n  \"522\": {\n    label: \"heavy intensity shower rain\",\n    icon: \"showers\",\n  },\n\n  \"531\": {\n    label: \"ragged shower rain\",\n    icon: \"showers\",\n  },\n\n  \"600\": {\n    label: \"light snow\",\n    icon: \"snow\",\n  },\n\n  \"601\": {\n    label: \"snow\",\n    icon: \"snow\",\n  },\n\n  \"602\": {\n    label: \"heavy snow\",\n    icon: \"snow\",\n  },\n\n  \"611\": {\n    label: \"sleet\",\n    icon: \"sleet\",\n  },\n\n  \"612\": {\n    label: \"shower sleet\",\n    icon: \"sleet\",\n  },\n\n  \"615\": {\n    label: \"light rain and snow\",\n    icon: \"rain-mix\",\n  },\n\n  \"616\": {\n    label: \"rain and snow\",\n    icon: \"rain-mix\",\n  },\n\n  \"620\": {\n    label: \"light shower snow\",\n    icon: \"rain-mix\",\n  },\n\n  \"621\": {\n    label: \"shower snow\",\n    icon: \"rain-mix\",\n  },\n\n  \"622\": {\n    label: \"heavy shower snow\",\n    icon: \"rain-mix\",\n  },\n\n  \"701\": {\n    label: \"mist\",\n    icon: \"sprinkle\",\n  },\n\n  \"711\": {\n    label: \"smoke\",\n    icon: \"smoke\",\n  },\n\n  \"721\": {\n    label: \"haze\",\n    icon: \"day-haze\",\n  },\n\n  \"731\": {\n    label: \"sand, dust whirls\",\n    icon: \"cloudy-gusts\",\n  },\n\n  \"741\": {\n    label: \"fog\",\n    icon: \"fog\",\n  },\n\n  \"751\": {\n    label: \"sand\",\n    icon: \"cloudy-gusts\",\n  },\n\n  \"761\": {\n    label: \"dust\",\n    icon: \"dust\",\n  },\n\n  \"762\": {\n    label: \"volcanic ash\",\n    icon: \"smog\",\n  },\n\n  \"771\": {\n    label: \"squalls\",\n    icon: \"day-windy\",\n  },\n\n  \"781\": {\n    label: \"tornado\",\n    icon: \"tornado\",\n  },\n\n  \"800\": {\n    label: \"clear sky\",\n    icon: \"sunny\",\n  },\n\n  \"801\": {\n    label: \"few clouds\",\n    icon: \"cloudy\",\n  },\n\n  \"802\": {\n    label: \"scattered clouds\",\n    icon: \"cloudy\",\n  },\n\n  \"803\": {\n    label: \"broken clouds\",\n    icon: \"cloudy\",\n  },\n\n  \"804\": {\n    label: \"overcast clouds\",\n    icon: \"cloudy\",\n  },\n\n  \"900\": {\n    label: \"tornado\",\n    icon: \"tornado\",\n  },\n\n  \"901\": {\n    label: \"tropical storm\",\n    icon: \"hurricane\",\n  },\n\n  \"902\": {\n    label: \"hurricane\",\n    icon: \"hurricane\",\n  },\n\n  \"903\": {\n    label: \"cold\",\n    icon: \"snowflake-cold\",\n  },\n\n  \"904\": {\n    label: \"hot\",\n    icon: \"hot\",\n  },\n\n  \"905\": {\n    label: \"windy\",\n    icon: \"windy\",\n  },\n\n  \"906\": {\n    label: \"hail\",\n    icon: \"hail\",\n  },\n\n  \"951\": {\n    label: \"calm\",\n    icon: \"sunny\",\n  },\n\n  \"952\": {\n    label: \"light breeze\",\n    icon: \"cloudy-gusts\",\n  },\n\n  \"953\": {\n    label: \"gentle breeze\",\n    icon: \"cloudy-gusts\",\n  },\n\n  \"954\": {\n    label: \"moderate breeze\",\n    icon: \"cloudy-gusts\",\n  },\n\n  \"955\": {\n    label: \"fresh breeze\",\n    icon: \"cloudy-gusts\",\n  },\n\n  \"956\": {\n    label: \"strong breeze\",\n    icon: \"cloudy-gusts\",\n  },\n\n  \"957\": {\n    label: \"high wind, near gale\",\n    icon: \"cloudy-gusts\",\n  },\n\n  \"958\": {\n    label: \"gale\",\n    icon: \"cloudy-gusts\",\n  },\n\n  \"959\": {\n    label: \"severe gale\",\n    icon: \"cloudy-gusts\",\n  },\n\n  \"960\": {\n    label: \"storm\",\n    icon: \"thunderstorm\",\n  },\n\n  \"961\": {\n    label: \"violent storm\",\n    icon: \"thunderstorm\",\n  },\n\n  \"962\": {\n    label: \"hurricane\",\n    icon: \"cloudy-gusts\",\n  },\n};\n","import { API_URL, API_KEY } from \"./consts\";\nimport { getDate, getTime, getWeatherIcon } from \"./helpers\";\n\nexport const fetchWeatherData = async (city) => {\n  const endpoint = `${API_URL}weather?APPID=${API_KEY}&q=${city.value}&units=metric&lang=EN`;\n  const data = await (await fetch(endpoint)).json();\n  return {\n    name: data.name,\n    temp: Math.round(data.main.temp),\n    description: data.weather[0].description,\n    id: data.weather[0].id,\n    icon: data.weather[0].icon,\n    humidity: data.main.humidity,\n    speed: Number.parseFloat(data.wind.speed).toFixed(1),\n    sunrise: getTime(data.sys.sunrise),\n    sunset: getTime(data.sys.sunset),\n  };\n};\n\nexport const fetchForecastData = async (city) => {\n  const endpoint = `${API_URL}forecast?APPID=${API_KEY}&q=${city.value}&units=metric&lang=EN`;\n  const data = await (await fetch(endpoint)).json();\n  return data.list.map((forecastDays) => {\n    return {\n      temp: Math.round(forecastDays.main.temp),\n      date: getDate(forecastDays.dt),\n      icon: getWeatherIcon(\n        forecastDays.weather[0].id,\n        forecastDays.weather[0].icon\n      ),\n    };\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { CITIES } from \"../../services/consts\";\n\nconst QuickOptionsWrapper = styled.div`\n  width: 350px;\n  margin: 10px auto;\n  display: flex;\n  border-radius: 10px;\n  border: 5px solid ${({ theme }) => theme.quickOptionsBorder};\n  box-shadow: 0 3px 15px ${({ theme }) => theme.quickOptionsShadow};\n`;\n\nconst QuickOptionsButton = styled.button`\n  flex: 1 1 auto;\n  padding: 10px;\n  font-family: Montserrat, sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n  background: ${({ theme }) => theme.buttonBackground}\n    ${({ theme }) => theme.buttonBackgroundGradientLight};\n  color: ${({ theme }) => theme.buttonText};\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: ${({ theme }) => theme.buttonBackground}\n      ${({ theme }) => theme.buttonBackgroundGradientDark};\n  }\n\n  &:first-child {\n    border-radius: 5px 0 0 5px;\n  }\n\n  &:not(:first-child) {\n    border-left: 1px solid ${({ theme }) => theme.buttonBorder};\n  }\n\n  &:last-child {\n    border-radius: 0 5px 5px 0;\n  }\n`;\n\nconst QuickOptions = ({ displayWeather, handleThemeChange, isDarkTheme }) => {\n  const { t } = useTranslation();\n  return (\n    <QuickOptionsWrapper>\n      <QuickOptionsButton>\n        <i className=\"fas fa-map-marker-alt\"></i>\n      </QuickOptionsButton>\n      {CITIES.map((city) => (\n        <QuickOptionsButton\n          key={t(city.name)}\n          onClick={() => displayWeather(city)}\n        >\n          {t(city.title)}\n        </QuickOptionsButton>\n      ))}\n      <QuickOptionsButton onClick={handleThemeChange}>\n        <i className={`fas ${isDarkTheme ? \"fa-sun\" : \"fa-moon\"}`}></i>\n      </QuickOptionsButton>\n    </QuickOptionsWrapper>\n  );\n};\n\nexport default QuickOptions;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { getWeatherIcon } from \"../../services/helpers\";\nimport \"./css/weather-icons.min.css\";\n\nconst StyledWeatherWrapper = styled.div`\n  padding: 20px;\n  background: ${({ theme }) => theme.backgroundWeather}\n    ${({ theme }) => theme.backgroundWeatherGradient};\n  color: ${({ theme }) => theme.textWeather};\n`;\n\nconst StyledWeatherCityTitle = styled.h2`\n  font-size: 24px;\n  font-weight: 400;\n  line-height: 1;\n  text-align: center;\n  margin: 0 0 20px 0;\n`;\n\nconst StyledWeatherInnerTopWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledWeatherInnerWrapper = styled.div`\n  display: flex;\n  margin-top: 30px;\n`;\n\nconst StyledWeatherSection = styled.div`\n  flex: 0 0 50%;\n  text-align: center;\n`;\n\nconst StyledWeatherIconSection = styled(StyledWeatherSection)`\n  font-size: 64px;\n`;\n\nconst StyledWeatherSectionTitle = styled.h3`\n  font-size: 13px;\n  font-weight: 400;\n  line-height: 1;\n  text-align: center;\n  padding: 0 0 5px 0;\n  margin: 0 0 5px 0;\n`;\n\nconst StyledWeatherSectionValue = styled.div`\n  font-size: 18px;\n  text-align: center;\n  font-weight: 600;\n`;\n\nconst StyledWeatherSectionTempValue = styled.span`\n  font-size: 64px;\n  font-weight: 800;\n  line-height: 1;\n`;\n\nconst StyledWeatherSectionTempUnit = styled(StyledWeatherSectionTempValue)`\n  font-size: 24px;\n`;\n\nconst StyledWeatherSectionTempDescription = styled.div`\n  margin-top: 5px;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1;\n`;\n\nconst Weather = ({ weatherData }) => {\n  const { t } = useTranslation();\n  return (\n    <StyledWeatherWrapper id=\"weather\">\n      <StyledWeatherCityTitle>{weatherData.name}</StyledWeatherCityTitle>\n\n      <StyledWeatherInnerTopWrapper>\n        <StyledWeatherSection>\n          <StyledWeatherSectionTempValue>\n            {weatherData.temp}\n          </StyledWeatherSectionTempValue>\n          <StyledWeatherSectionTempUnit>°C</StyledWeatherSectionTempUnit>\n          <StyledWeatherSectionTempDescription>\n            {weatherData.description}\n          </StyledWeatherSectionTempDescription>\n        </StyledWeatherSection>\n        <StyledWeatherIconSection>\n          <i className={getWeatherIcon(weatherData.id, weatherData.icon)}></i>\n        </StyledWeatherIconSection>\n      </StyledWeatherInnerTopWrapper>\n\n      <StyledWeatherInnerWrapper>\n        <StyledWeatherSection>\n          <StyledWeatherSectionTitle>\n            {t(\"weather.wind\")}\n          </StyledWeatherSectionTitle>\n          <StyledWeatherSectionValue>\n            <span>{weatherData.speed}</span> km/h\n          </StyledWeatherSectionValue>\n        </StyledWeatherSection>\n        <StyledWeatherSection>\n          <StyledWeatherSectionTitle>\n            {t(\"weather.humidity\")}\n          </StyledWeatherSectionTitle>\n          <StyledWeatherSectionValue>\n            <span>{weatherData.humidity}</span> %\n          </StyledWeatherSectionValue>\n        </StyledWeatherSection>\n      </StyledWeatherInnerWrapper>\n\n      <StyledWeatherInnerWrapper>\n        <StyledWeatherSection>\n          <StyledWeatherSectionTitle>\n            {t(\"weather.sunrise\")}\n          </StyledWeatherSectionTitle>\n          <StyledWeatherSectionValue>\n            <span>\n              {weatherData.sunrise.hours}:{weatherData.sunrise.minutes}\n            </span>\n          </StyledWeatherSectionValue>\n        </StyledWeatherSection>\n        <StyledWeatherSection>\n          <StyledWeatherSectionTitle>\n            {t(\"weather.sunset\")}\n          </StyledWeatherSectionTitle>\n          <StyledWeatherSectionValue>\n            <span>\n              {weatherData.sunset.hours}:{weatherData.sunset.minutes}\n            </span>\n          </StyledWeatherSectionValue>\n        </StyledWeatherSection>\n      </StyledWeatherInnerWrapper>\n    </StyledWeatherWrapper>\n  );\n};\n\nexport default Weather;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { WEEK_DAYS } from \"../../services/consts\";\n\nconst ForecastWrapper = styled.div`\n  background-color: ${({ theme }) => theme.backgroundForecast};\n`;\n\nconst ForecastDayWrapper = styled.div`\n  border-top: 1px solid ${({ theme }) => theme.borderForecast};\n  padding: 15px 30px;\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.textForecast};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.backgroundForecastHover};\n  }\n`;\n\nconst ForecastDate = styled.div`\n  flex: 1;\n  font-size: 14px;\n`;\n\nconst ForecastIcon = styled.div`\n  flex: 0 0 30px;\n  font-size: 20px;\n  text-align: center;\n  color: ${({ theme }) => theme.iconForecast};\n`;\n\nconst ForecastTemp = styled.div`\n  flex: 0 0 70px;\n  text-align: right;\n`;\n\nconst Forecast = ({ forecastData }) => {\n  const { t } = useTranslation();\n  return (\n    <ForecastWrapper id=\"forecast\">\n      {forecastData.map((dayData) => (\n        <ForecastDayWrapper>\n          <ForecastDate>\n            {t(WEEK_DAYS[dayData.date.weekDay])} {dayData.date.day}.\n            {dayData.date.month}.\n          </ForecastDate>\n          <ForecastIcon>\n            <i className={dayData.icon}></i>\n          </ForecastIcon>\n          <ForecastTemp>{Math.round(dayData.temp)} °C</ForecastTemp>\n        </ForecastDayWrapper>\n      ))}\n    </ForecastWrapper>\n  );\n};\nexport default Forecast;\n","// colors\nconst PINK = \"#ff3e78\";\nconst BLACK = \"#000\";\nconst WHITE = \"#fff\";\nconst LIGHT_YELLOW = \"#fff3d9\";\nconst DARK_YELLOW = \"#ffbd2e\";\nconst LIGHT_PURPLE = \"#777bf0\";\nconst DARK_PURPLE = \"#453df8\";\nconst LIGHT_GRAY = \"#e5e5e5\";\nconst DARK_GRAY = \"#666\";\nconst SHADOW_LIGHT = \"rgba(0, 0, 0, 0.5)\";\nconst SHADOW_DARK = \"rgba(0, 0, 0, 0.7)\";\nconst GRADIENT_TOP_LIGHT = \"linear-gradient(to top, #ff3e78, #777bf0)\";\nconst GRADIENT_TOP_DARK = \"linear-gradient(to top, #ff3e78, #453df8)\";\nconst GRADIENT_BOTTOM_DARK = \"linear-gradient(to bottom, #ff3e78, #ffbd2e)\";\n\nconst COMMON_COLORS = {\n  backgroundForecast: WHITE,\n  backgroundForecastHover: LIGHT_YELLOW,\n  textForecast: DARK_GRAY,\n  borderForecast: LIGHT_GRAY,\n  iconForecast: PINK,\n  quickOptionsBorder: SHADOW_LIGHT,\n  quickOptionsShadow: SHADOW_DARK,\n  buttonBackground: PINK,\n  buttonBackgroundGradientLight: GRADIENT_TOP_LIGHT,\n  buttonBackgroundGradientDark: GRADIENT_TOP_DARK,\n  buttonText: WHITE,\n  buttonBorder: SHADOW_LIGHT,\n  backgroundWeather: PINK,\n  backgroundWeatherGradient: GRADIENT_BOTTOM_DARK,\n  textWeather: WHITE,\n  weatherCardBorder: SHADOW_LIGHT,\n  weatherCardShadow: SHADOW_DARK,\n  text: WHITE,\n};\n\nexport const lightTheme = {\n  ...COMMON_COLORS,\n};\n\nexport const darkTheme = {\n  ...COMMON_COLORS,\n};\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\nhtml {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n*,\n::after,\n::before {\n  box-sizing: inherit;\n}\n\nbody {\n  min-width: 100vw;\n  min-height: 100vh;\n  font-family: Montserrat, sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  margin: 0;\n  padding: 1em;\n  background: url(${require(`../assets/background.jpg`)}) top no-repeat;\n  background-size: cover;\n}\n\nh1 {\n  margin-bottom: 30px;\n  font-size: 48px;\n  text-align: center;\n  color: ${({ theme }) => theme.text};\n}\n`;\n\nexport default GlobalStyle;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { fetchWeatherData, fetchForecastData } from \"./services/API\";\nimport { getForecastData } from \"./services/helpers\";\n\nimport QuickOptions from \"./components/QuickOptions/QuickOptions\";\nimport Weather from \"./components/Weather/Weather\";\nimport Forecast from \"./components/Forecast/Forecast\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./theme/consts\";\nimport GlobalStyle from \"./theme/GlobalStyle\";\n\nconst StyledDisplayCard = styled.div`\n  margin: 10px auto 30px auto;\n  width: 350px;\n  overflow: hidden;\n  border-radius: 10px;\n  border: 5px solid ${({ theme }) => theme.weatherCardBorder};\n  box-shadow: 0 3px 15px r ${({ theme }) => theme.weatherCardShadow};\n`;\n\nconst App = () => {\n  const { t } = useTranslation();\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [showWeatherCard, setShowWeatherCard] = useState(false);\n  const [weatherData, setWeatherData] = useState({});\n  const [forecastData, setForecastData] = useState([]);\n\n  const displayWeather = async (city) => {\n    setLoading(true);\n    setShowWeatherCard(true);\n\n    const newWeatherData = await fetchWeatherData(city);\n    const newForecastData = await fetchForecastData(city);\n\n    setWeatherData(newWeatherData);\n    setForecastData(getForecastData(newForecastData));\n    setLoading(false);\n  };\n\n  const handleThemeChange = () => {\n    setIsDarkTheme(!isDarkTheme);\n  };\n\n  return (\n    <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\n      <>\n        <GlobalStyle />\n        <h1>{t(\"title\")}</h1>\n        <QuickOptions\n          displayWeather={displayWeather}\n          handleThemeChange={handleThemeChange}\n          isDarkTheme={isDarkTheme}\n        />\n        {!loading && showWeatherCard && (\n          <StyledDisplayCard>\n            <Weather weatherData={weatherData} />\n            <Forecast forecastData={forecastData} />\n          </StyledDisplayCard>\n        )}\n      </>\n    </ThemeProvider>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./i18n\";\nimport App from \"./App\";\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}